import pygame
import sys
import random

pygame.init()

# Настройки экрана
WIDTH, HEIGHT = 800, 600  # Увеличена высота до 650
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Ping Pong")

# Цвета
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREY = (100, 100, 100)
LIGHT_GREY = (200, 200, 200)
HOVER_GREY = (150, 150, 150)
BUTTON_BORDER = (50, 50, 50)
BUTTON_BACKGROUND = LIGHT_GREY

# Настройки мяча
ball_size = 20
ball_x = WIDTH // 2
ball_y = HEIGHT // 2
ball_speed_x = 7
ball_speed_y = 7
acceleration = 0.5  # Величина ускорения при каждом ударе

# Настройки ракеток
paddle_width = 10
paddle_height = 120  # Увеличена высота ракетки
player1_x = 30
player1_y = HEIGHT // 2 - paddle_height // 2
player2_x = WIDTH - 40
player2_y = HEIGHT // 2 - paddle_height // 2
paddle_speed = 10
score1 = 0
score2 = 0
font = pygame.font.Font(None, 74)
game_over_font = pygame.font.Font(None, 100)
pause_font = pygame.font.Font(None, 50)
button_font = pygame.font.Font(None, 40)  # Уменьшенный шрифт для кнопок
clock = pygame.time.Clock()

# Функция для отображения меню
def show_menu():
    menu = True
    selected = None  # Выбранный пункт меню
    while menu:
        screen.fill(BLACK)
        title = font.render("Ping Pong", True, WHITE)
        screen.blit(title, (WIDTH // 2 - title.get_width() // 2, 100))

        option1_text = "1. С компьютером"
        option1 = font.render(option1_text, True, WHITE if selected != 1 else GREY)
        option1_rect = option1.get_rect(topleft=(WIDTH // 2 - option1.get_width() // 2, 250))
        screen.blit(option1, option1_rect)

        option2_text = "2. Против друга"
        option2 = font.render(option2_text, True, WHITE if selected != 2 else GREY)
        option2_rect = option2.get_rect(topleft=(WIDTH // 2 - option2.get_width() // 2, 350))
        screen.blit(option2, option2_rect)

        pygame.display.flip()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.MOUSEMOTION:
                mouse_pos = event.pos
                if option1_rect.collidepoint(mouse_pos):
                    selected = 1
                elif option2_rect.collidepoint(mouse_pos):
                    selected = 2
                else:
                    selected = None
            if event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 1:  # Левый клик
                    if option1_rect.collidepoint(event.pos):
                        menu = False
                        return "computer"
                    if option2_rect.collidepoint(event.pos):
                        menu = False
                        return "friend"

        clock.tick(60)

# Основной игровой цикл
def game_loop(mode):
    global player1_y, player2_y, score1, score2, ball_x, ball_y, ball_speed_x, ball_speed_y
    paused = False
    pause_button_size = 50
    pause_button_x = WIDTH // 2 - pause_button_size // 2
    pause_button_y = 30
    pause_button_rect = pygame.Rect(pause_button_x, pause_button_y, pause_button_size, pause_button_size)
    pause_icon = pygame.Surface((pause_button_size - 10, pause_button_size - 10))
    pause_icon.fill(WHITE)
    # Создаем значок паузы
    pygame.draw.rect(pause_icon, BLACK, (0, 0, (pause_button_size - 10) // 3, pause_button_size - 10))
    pygame.draw.rect(pause_icon, BLACK, ((pause_button_size - 10) * 2 // 3, 0, (pause_button_size - 10) // 3, pause_button_size - 10))

    # Кнопки паузы
    resume_button_rect = pygame.Rect(WIDTH // 2 - 120, HEIGHT // 2 - 60, 240, 50)
    main_menu_button_rect = pygame.Rect(WIDTH // 2 - 120, HEIGHT // 2 + 10, 240, 50)

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    paused = not paused  # Переключение состояния паузы
            if event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 1:  # Левый клик
                    if pause_button_rect.collidepoint(event.pos):
                        paused = not paused  # Переключение состояния паузы
                    elif paused:
                        if resume_button_rect.collidepoint(event.pos):
                            paused = False
                        elif main_menu_button_rect.collidepoint(event.pos):
                            return "main_menu"

        if paused:
            # Отображение сообщения "Пауза"
            pause_display_text = pause_font.render("Пауза", True, WHITE)
            screen.blit(pause_display_text, (WIDTH // 2 - pause_display_text.get_width() // 2, HEIGHT // 2 - 150))

            '''# Отображение кнопки "Возобновить игру"
            resume_text = button_font.render("Возобновить игру", True, BLACK, BUTTON_BACKGROUND)
            resume_text_rect = resume_text.get_rect(center=resume_button_rect.center)
            pygame.draw.rect(screen, BUTTON_BACKGROUND, resume_button_rect)
            screen.blit(resume_text, resume_text_rect)
            pygame.draw.rect(screen, BUTTON_BORDER, resume_button_rect, 2)  # Граница толщиной 2 пикселя

            # Отображение кнопки "Выйти в главное меню"
            main_menu_text = button_font.render("Выйти в главное меню", True, BLACK, BUTTON_BACKGROUND)
            main_menu_text_rect = main_menu_text.get_rect(center=main_menu_button_rect.center)
            pygame.draw.rect(screen, BUTTON_BACKGROUND, main_menu_button_rect)
            screen.blit(main_menu_text, main_menu_text_rect)
            pygame.draw.rect(screen, BUTTON_BORDER, main_menu_button_rect, 2)  # Граница толщиной 2 пикселя

            # Проверка наведения курсора на кнопки
            mouse_pos = pygame.mouse.get_pos()
            if resume_button_rect.collidepoint(mouse_pos):
                pygame.draw.rect(screen, HOVER_GREY, resume_button_rect, 2)
            else:
                pygame.draw.rect(screen, BUTTON_BORDER, resume_button_rect, 2)

            if main_menu_button_rect.collidepoint(mouse_pos):
                pygame.draw.rect(screen, HOVER_GREY, main_menu_button_rect, 2)
            else:
                pygame.draw.rect(screen, BUTTON_BORDER, main_menu_button_rect, 2)'''

            pygame.display.flip()
            continue  # Пропускаем остальную часть цикла, пока игра на паузе

        # Управление игроком 1
        keys = pygame.key.get_pressed()
        if keys[pygame.K_w] and player1_y > 0:
            player1_y -= paddle_speed
        if keys[pygame.K_s] and player1_y < HEIGHT - paddle_height:
            player1_y += paddle_speed

        # Управление для компьютера или игрока 2
        if mode == "computer":
            if player2_y + paddle_height // 2 < ball_y:
                player2_y += paddle_speed
            elif player2_y + paddle_height // 2 > ball_y:
                player2_y -= paddle_speed
        else:
            # Управление игроком 2
            if keys[pygame.K_UP] and player2_y > 0:
                player2_y -= paddle_speed
            if keys[pygame.K_DOWN] and player2_y < HEIGHT - paddle_height:
                player2_y += paddle_speed

        # Ограничение движения ракетки
        player2_y = max(0, min(player2_y, HEIGHT - paddle_height))

        # Движение мяча
        ball_x += ball_speed_x
        ball_y += ball_speed_y

        # Отскок мяча от верхнего и нижнего края
        if ball_y <= 0 or ball_y >= HEIGHT - 20:
            ball_speed_y *= -1

        # Отскок мяча от ракеток и ускорение при столкновении с ними.
        # Проверка столкновения с ракеткой игрока 1 (левая)
        if (player1_x - 5 < ball_x < player1_x + paddle_width + 5) and (player1_y - 5 < ball_y < player1_y + paddle_height + 5):
            ball_speed_x *= -1
            ball_speed_x += acceleration if ball_speed_x > 0 else -acceleration
            ball_x = player1_x + paddle_width + 5  # Корректируем позицию мяча

        # Проверка столкновения с ракеткой игрока 2 (правая)
        if (player2_x - 5 < ball_x + ball_size < player2_x + paddle_width + 5) and (player2_y - 5 < ball_y < player2_y + paddle_height + 5):
            ball_speed_x *= -1
            ball_speed_x += acceleration if ball_speed_x > 0 else -acceleration
            ball_x = player2_x - ball_size - 5  # Корректируем позицию мяча

        # Проверка на голы и сброс мяча в центр поля.
        if ball_x <= 0:
            score2 += 1
            ball_x, ball_y = WIDTH // 2, HEIGHT // 2
            ball_speed_x = -7  # Меняем направление мяча при сбросе.
            ball_speed_y = random.choice([-7, 7])  # Случайное направление по Y.

        if ball_x >= WIDTH:
            score1 += 1
            ball_x, ball_y = WIDTH // 2, HEIGHT // 2
            ball_speed_x = 7  # Меняем направление мяча при сбросе.
            ball_speed_y = random.choice([-7, 7])  # Случайное направление по Y.

        # Проверка на окончание игры
        if score1 >= 11 or score2 >= 11:
            game_over = True
            break

        screen.fill(BLACK)

        # Рисуем ракетки и мяч.
        pygame.draw.rect(screen, WHITE, (player1_x, player1_y, paddle_width, paddle_height))
        pygame.draw.rect(screen, WHITE, (player2_x, player2_y, paddle_width, paddle_height))
        pygame.draw.ellipse(screen, WHITE, (ball_x, ball_y, ball_size, ball_size))

        # Рисуем центральную линию.
        pygame.draw.aaline(screen, WHITE, (WIDTH // 2, 0), (WIDTH // 2, HEIGHT))

        # Отображение счета.
        text1 = font.render(str(score1), True, WHITE)
        text2 = font.render(str(score2), True, WHITE)

        screen.blit(text1, (WIDTH // 4, 20))
        screen.blit(text2, (WIDTH * 3 // 4, 20))

        # Рисуем кнопку паузы.
        pygame.draw.rect(screen, LIGHT_GREY, pause_button_rect)
        screen.blit(pause_icon, (pause_button_rect.x + 5, pause_button_rect.y + 5))
        # Проверка наведения курсора на кнопку паузы
        mouse_pos = pygame.mouse.get_pos()
        if pause_button_rect.collidepoint(mouse_pos):
            pygame.draw.rect(screen, HOVER_GREY, pause_button_rect, 3)
        else:
            pygame.draw.rect(screen, BUTTON_BORDER, pause_button_rect, 3)

        pygame.display.flip()
        clock.tick(60)

    # Отображение сообщения о конце игры
    game_over_text = game_over_font.render("Игра окончена", True, WHITE)
    winner_text = game_over_font.render(f"Победитель: {'Игрок 1' if score1 > score2 else 'Игрок 2'}", True, WHITE)
    screen.fill(BLACK)
    screen.blit(game_over_text, (WIDTH // 2 - game_over_text.get_width() // 2, HEIGHT // 2 - game_over_text.get_height()))
    screen.blit(winner_text, (WIDTH // 2 - winner_text.get_width() // 2, HEIGHT // 2 + 10))
    pygame.display.flip()
    pygame.time.delay(5000)  # Пауза на 5 секунды перед выходом

    pygame.quit()
    sys.exit()

# Запуск меню и игры.
def main():
    mode = show_menu()
    if mode == "main_menu":
        show_menu()
    else:
        game_loop(mode)

if __name__ == "__main__":
    main()
